#!/bin/bash

function start()
{
	if ! grep -q "pi_observe" /etc/rc.local; then
		sed -ri '/^exit 0/i\/usr/local/bin/pi_observe' /etc/rc.local
	fi

	echo "ds1307 0x68" > /sys/class/i2c-adapter/i2c-1/new_device 2> /dev/null
	/usr/local/bin/set_time_gps.py

	if [ $? == "0" ]; then
		echo "`date`: time set from GPS" >> /var/log/pi_observer/rtc_log
		hwclock -w
	else
		echo "`date`: time set from RTC" >> /var/log/pi_observer/rtc_log
		hwclock -s
	fi

	# Needed to silence error out for empty cron
	crontab -u root -l 2> /dev/null | crontab -u root -

	if ! crontab -u root -l | grep -q "temp_logger.py"; then
		(echo '* * * * * /usr/local/bin/temp_logger.py'; crontab -u root -l) | crontab -u root -
	fi
	if ! crontab -u root -l | grep -q "press_alt_logger.py"; then
		(echo '* * * * * /usr/local/bin/press_alt_logger.py'; crontab -u root -l) | crontab -u root -
	fi
	if ! crontab -u root -l | grep -q "hum_logger.py"; then
		(echo '* * * * * /usr/local/bin/hum_logger.py'; crontab -u root -l) | crontab -u root -
	fi
	if ! crontab -u root -l | grep -q "location_logger.py"; then
		(echo '* * * * * /usr/local/bin/location_logger.py'; crontab -u root -l) | crontab -u root -
	fi
	if ! crontab -u root -l | grep -q "chart_drawer.py"; then
		(echo '*/30 * * * * /usr/local/bin/chart_drawer.py'; crontab -u root -l) | crontab -u root -
	fi
	
	systemctl start motion.service
}

function stop()
{
	sed -i '/pi_observe/d' /etc/rc.local

	crontab -u root -l | grep -v 'temp_logger.py' | crontab -u root -
	crontab -u root -l | grep -v 'press_alt_logger.py' | crontab -u root -
	crontab -u root -l | grep -v 'hum_logger.py' | crontab -u root -
	crontab -u root -l | grep -v 'location_logger.py' | crontab -u root -
	crontab -u root -l | grep -v 'chart_drawer.py' | crontab -u root -

	systemctl stop motion.service
}

if [ "$(id -u)" != 0 ]; then
	echo "Start script must be run with root permissions" 
	exit 1
fi

case $1 in
	stop)
		stop
		exit
		;;
	*)
		start
		;;
esac

